priority -45

snippet boil "Boilerplate code for competitive programming." b
#include <bits/stdc++.h>
using namespace std;
int main() {
	${1}
}
endsnippet

snippet fast "Code for faster standard input/output." b
ios_base::sync_with_stdio(false);
cin.tie(NULL);
cout.tie(NULL);
endsnippet

snippet bits "Include header library for STL functions." b
#include <bits/stdc++.h>
endsnippet

snippet sort "Sort the data structure." b
sort(${1}.begin(), $1.end());
endsnippet

snippet sortd "Sort the data structure in descending order." b
sort(${1}.begin(), $1.end(), greater<>());
endsnippet

snippet disd "Display the data structure." b
for (auto i : ${1:v}) { cout << i << ' '; }
endsnippet

snippet cmp "Add a descending sort function." b
bool cmp(${1:int} ${2:a}, $1 ${3:b}) { return $2 > $3; }
endsnippet

snippet std "Import STL." b
using namespace std;
endsnippet

snippet ac "Array of chars." b
char ${1:arr}[${2}];
endsnippet

snippet ai "Array of integers." b
int ${1:arr}[${2}];
endsnippet

snippet al "Array of longs." b
long ${1:arr}[${2}];
endsnippet

snippet all "Array of longs." b
long long ${1:arr}[${2}];
endsnippet

snippet dc "Deque of chars." b
deque<char> ${1:d}.
endsnippet

snippet di "Deque of integers." b
deque<int> ${1:d};
endsnippet

snippet dl "Deque of long integers." b
deque<long> ${1:d};
endsnippet

snippet dll "Deque of long long integers." b
deque<long long> ${1:d};
endsnippet

snippet pc "Pair of chars." b
pair<char, char> ${1:p}.
endsnippet

snippet pci "Pair of char and int." b
pair<char, int> ${1:p}.
endsnippet

snippet pi "Pair of ints." b
pair<int, int> ${1:p}.
endsnippet

snippet pl "Pair of longs." b
pair<long, long> ${1:p}.
endsnippet

snippet pqc "Priority queue of chars." b
priority_queue<char> ${1:pq}.
endsnippet

snippet pqi "Priority queue of integers." b
priority_queue<int> ${1:pq};
endsnippet

snippet pql "Priority queue of long integers." b
priority_queue<long> ${1:pq};
endsnippet

snippet pqll "Priority queue of long long integers." b
priority_queue<long long> ${1:pq};
endsnippet

snippet qc "Queue of chars." b
queue<char> ${1:q}.
endsnippet

snippet qi "Queue of integers." b
queue<int> ${1:q};
endsnippet

snippet ql "Queue of long integers." b
queue<long> ${1:q};
endsnippet

snippet qll "Queue of long long integers." b
queue<long long> ${1:q};
endsnippet

snippet sc "Set of chars." b
set<char> ${1:s}.
endsnippet

snippet si "Set of integers." b
set<int> ${1:s};
endsnippet

snippet sl "Set of long integers." b
set<long> ${1:s};
endsnippet

snippet sll "Set of long long integers." b
set<long long> ${1:s};
endsnippet

snippet stc "Stack of chars." b
stack<char> ${1:s}.
endsnippet

snippet sti "Stack of integers." b
stack<int> ${1:s};
endsnippet

snippet stl "Stack of long integers." b
stack<long> ${1:s};
endsnippet

snippet stll "Stack of long long integers." b
stack<long long> ${1:s};
endsnippet

snippet vc "Vector of chars." b
vector<char> ${1:v}.
endsnippet

snippet vi "Vector of integers." b
vector<int> ${1:v};
endsnippet

snippet vl "Vector of long integers." b
vector<long> ${1:v};
endsnippet

snippet vll "Vector of long long integers." b
vector<long long> ${1:v};
endsnippet

snippet ml "Macro for longs." b
#define l long
endsnippet

snippet mll "Macro for long longs." b
#define ll long long long
endsnippet
