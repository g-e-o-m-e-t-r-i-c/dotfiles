snippet boil
	#include <bits/stdc++.h>
	using namespace std;

	#define l long
	#define ll long long
	#define ull unsigned long long

	#define loop(var, start, end) for (auto var = start; var < end; ++var)
	#define dloop(var, start, end) for (auto var = start; var > end; --var)
	#define iloop(var, st) for (auto var : st)

	int main() {
		cin.tie(nullptr);
		cout.tie(nullptr);
		ios_base::sync_with_stdio(false);

		${1}
	}

snippet fast
	cin.tie(nullptr);
	cout.tie(nullptr);
	ios_base::sync_with_stdio(false);


snippet bits
	#include <bits/stdc++.h>


snippet sort
	sort(${1}.begin(), $1.end());


snippet sortd
	sort(${1}.begin(), $1.end(), greater<>());


snippet disd
	for (auto ${1:i} : ${2:${VISUAL:v}}) { cout << $1 << ' '; }


snippet cmp
	bool cmp(${1:${VISUAL:int}} ${2:${VISUAL:a}}, $1 ${3:${VISUAL:b}}) { return $2 > $3; }

snippet std
	using namespace std;

snippet ac
	char ${1:arr}[${2:${VISUAL:size}}];

snippet ai
	int ${1:arr}[${2:${VISUAL:size}}];

snippet al
	long ${1:arr}[${2:${VISUAL:size}}];

snippet all
	long long ${1:arr}[${2:${VISUAL:size}}];

snippet dc
	deque<char> ${1:d}.

snippet di
	deque<int> ${1:d};

snippet dl
	deque<long> ${1:d};

snippet dll
	deque<long long> ${1:d};

snippet pc
	pair<char, char> ${1:p}.

snippet pci
	pair<char, int> ${1:p}.

snippet pi
	pair<int, int> ${1:p}.

snippet pl
	pair<long, long> ${1:p}.

snippet pqc
	priority_queue<char> ${1:pq}.

snippet pqi
	priority_queue<int> ${1:pq};

snippet pql
	priority_queue<long> ${1:pq};

snippet pqll
	priority_queue<long long> ${1:pq};

snippet qc
	queue<char> ${1:q}.

snippet qi
	queue<int> ${1:q};

snippet ql
	queue<long> ${1:q};

snippet qll
	queue<long long> ${1:q};

snippet sc
	set<char> ${1:s}.

snippet si
	set<int> ${1:s};

snippet sl
	set<long> ${1:s};

snippet sll
	set<long long> ${1:s};

snippet stc
	stack<char> ${1:s}.

snippet sti
	stack<int> ${1:s};

snippet stl
	stack<long> ${1:s};

snippet stll
	stack<long long> ${1:s};

snippet vc
	vector<char> ${1:v}.

snippet vi
	vector<int> ${1:v};

snippet vl
	vector<long> ${1:v};

snippet vll
	vector<long long> ${1:v};

snippet ml
	#define ${1:l} long

snippet mll
	#define ${1:ll} long long

snippet mx
	max(${1:a}, ${2:${VISUAL:b}})

snippet mn
	min(${1:a}, ${2:${VISUAL:b}})

snippet tern
	${1:cond} ? ${2:${VISUAL:true}} : ${3:${VISUAL:false}};
