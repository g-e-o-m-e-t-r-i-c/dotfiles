snippet boil
  #include <bits/stdc++.h>
  using namespace std;

  using lo = long;
  using ll = long long;
  using ull = unsigned long long;
  using db = double;
  using ld = long double;

  #define pi pair<int, int>
  #define pl pair<long, long>
  #define pll pair<long long, long long>
  #define vi vector<int>
  #define vii vector<pair<int, int>>
  #define vl vector<long long>
  #define vll vector<pair<long long, long long>>

  #define loop(var, start, end) for (auto var = (start); var < (end); ++var)
  #define dloop(var, start, end) for (auto var = (start); var > (end); --var)
  #define iloop(var, st) for (auto var : st)

  #define eb emplace_back
  #define fi first
  #define mp make_pair
  #define pb push_back
  #define ppb pop_back
  #define pf push_front
  #define ppf pop_front
  #define sc second

  #define prn printf
  #define scn scanf

  int main() {
  	cin.tie(nullptr);
  	cout.tie(nullptr);
  	ios_base::sync_with_stdio(false);

  	${1}
  }

snippet fast
	cin.tie(nullptr);
	cout.tie(nullptr);
	ios_base::sync_with_stdio(false);
	${1}


snippet bits
	#include <bits/stdc++.h>
	using namespace std;

	${1}


snippet sort
	sort(${1}.begin(), $1.end());


snippet sortd
	sort(${1}.begin(), $1.end(), greater<>());


snippet dis
	for (auto ${1:i} : ${2:${VISUAL:v}}) { cout << $1 << ' '; }


snippet cmp
	bool cmp(${1:${VISUAL:int}} ${2:${VISUAL:a}}, $1 ${3:${VISUAL:b}}) { return $2 > $3; }

snippet std
	using namespace std;

snippet ar
	${1:int} ${2:arr}[${3:${VISUAL:n}}];

snippet dq
	deque<${1:int}> ${2:d}.

snippet pr
	pair<${1:int}, ${2:int}> ${3:p}.

snippet pq
	priority_queue<${1:int}> ${2:pq};

snippet qu
	queue<${1:int}> ${1:q}.

snippet se
	set<${1:int}> ${2:s};

snippet st
	stack<${1:int}> ${2:s};

snippet vc
	vector<${1:int}> ${2:v}.
