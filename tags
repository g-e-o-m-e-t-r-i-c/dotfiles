!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/geo/Desktop/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
0	.config/nvim/coc-settings.json	/^		"(",$/;"	s	array:pairs.enableCharacters
0	.config/nvim/coc-settings.json	/^	"coc.source.emoji.filetypes": ["markdown", "html", "lisp"],$/;"	s	array:coc.source.emoji.filetypes
1	.config/nvim/coc-settings.json	/^		"[",$/;"	s	array:pairs.enableCharacters
1	.config/nvim/coc-settings.json	/^	"coc.source.emoji.filetypes": ["markdown", "html", "lisp"],$/;"	s	array:coc.source.emoji.filetypes
2	.config/nvim/coc-settings.json	/^		"{",$/;"	s	array:pairs.enableCharacters
2	.config/nvim/coc-settings.json	/^	"coc.source.emoji.filetypes": ["markdown", "html", "lisp"],$/;"	s	array:coc.source.emoji.filetypes
3	.config/nvim/coc-settings.json	/^		"<",$/;"	s	array:pairs.enableCharacters
4	.config/nvim/coc-settings.json	/^		"'",$/;"	s	array:pairs.enableCharacters
5	.config/nvim/coc-settings.json	/^		"\\"",$/;"	s	array:pairs.enableCharacters
6	.config/nvim/coc-settings.json	/^		"`",$/;"	s	array:pairs.enableCharacters
7	.config/nvim/coc-settings.json	/^		"'''",$/;"	s	array:pairs.enableCharacters
8	.config/nvim/coc-settings.json	/^		"\\"\\"\\""$/;"	s	array:pairs.enableCharacters
AS_YOU_TYPE	.config/ranger/commands_full.py	/^    AS_YOU_TYPE   = 't'$/;"	v	class:scout
AUTO_OPEN	.config/ranger/commands_full.py	/^    AUTO_OPEN     = 'a'$/;"	v	class:scout
FILTER	.config/ranger/commands_full.py	/^    FILTER        = 'f'$/;"	v	class:scout
IGNORE_CASE	.config/ranger/commands_full.py	/^    IGNORE_CASE   = 'i'$/;"	v	class:scout
INVERT	.config/ranger/commands_full.py	/^    INVERT        = 'v'$/;"	v	class:scout
KEEP_OPEN	.config/ranger/commands_full.py	/^    KEEP_OPEN     = 'k'$/;"	v	class:scout
MARK	.config/ranger/commands_full.py	/^    MARK          = 'm'$/;"	v	class:scout
OPEN_ON_ENTER	.config/ranger/commands_full.py	/^    OPEN_ON_ENTER = 'e'$/;"	v	class:scout
PATH_RE_DQUOTED	.config/ranger/commands_full.py	/^    PATH_RE_DQUOTED = re.compile(r'^setlocal\\s+path="(.*?)"')$/;"	v	class:setlocal
PATH_RE_SQUOTED	.config/ranger/commands_full.py	/^    PATH_RE_SQUOTED = re.compile(r"^setlocal\\s+path='(.*?)'")$/;"	v	class:setlocal
PATH_RE_UNQUOTED	.config/ranger/commands_full.py	/^    PATH_RE_UNQUOTED = re.compile(r'^path=(.*?)$')$/;"	v	class:setlocal
PERM_FILTER	.config/ranger/commands_full.py	/^    PERM_FILTER   = 'p'$/;"	v	class:scout
SMART_CASE	.config/ranger/commands_full.py	/^    SMART_CASE    = 's'$/;"	v	class:scout
SM_GLOB	.config/ranger/commands_full.py	/^    SM_GLOB       = 'g'$/;"	v	class:scout
SM_LETTERSKIP	.config/ranger/commands_full.py	/^    SM_LETTERSKIP = 'l'$/;"	v	class:scout
SM_REGEX	.config/ranger/commands_full.py	/^    SM_REGEX      = 'r'$/;"	v	class:scout
The .config Directory	README.md	/^### The .config Directory$/;"	S	section:dotfiles""What You'll Find
UNMARK	.config/ranger/commands_full.py	/^    UNMARK        = 'M'$/;"	v	class:scout
What You'll Find	README.md	/^## What You'll Find$/;"	s	chapter:dotfiles
X	.config/ranger/rifle.conf	/^ext s[wmf]c, has snes9x-gtk,X = snes9x-gtk "$1"$/;"	k
\x20              terminal	.config/ranger/rifle.conf	/^ext x?html?, has w3m,               terminal = w3m "$@"$/;"	k
\x20             terminal	.config/ranger/rifle.conf	/^ext x?html?, has lynx,              terminal = lynx -- "$@"$/;"	k
\x20            terminal	.config/ranger/rifle.conf	/^ext x?html?, has links,             terminal = links "$@"$/;"	k
\x20           terminal	.config/ranger/rifle.conf	/^ext x?html?, has elinks,            terminal = elinks "$@"$/;"	k
\x20           terminal	.config/ranger/rifle.conf	/^ext x?html?, has links2,            terminal = links2 "$@"$/;"	k
\x20       pager_move  up	.config/ranger/rc.conf	/^pmap  <up>        pager_move  up=1$/;"	k
\x20       taskview_move up	.config/ranger/rc.conf	/^tmap <up>        taskview_move up=1$/;"	k
\x20      move right	.config/ranger/rc.conf	/^map <CR>       move right=1$/;"	k
\x20      move up	.config/ranger/rc.conf	/^map <UP>       move up=1$/;"	k
\x20      pager_move  down	.config/ranger/rc.conf	/^pmap  <C-d>       pager_move  down=0.5  pages=True$/;"	k
\x20      pager_move  to	.config/ranger/rc.conf	/^pmap  <end>       pager_move  to=-1$/;"	k
\x20      pager_move  up	.config/ranger/rc.conf	/^pmap  <C-u>       pager_move  up=0.5    pages=True$/;"	k
\x20      taskview_move down	.config/ranger/rc.conf	/^tmap <C-d>       taskview_move down=0.5  pages=True$/;"	k
\x20      taskview_move to	.config/ranger/rc.conf	/^tmap <end>       taskview_move to=-1$/;"	k
\x20      taskview_move up	.config/ranger/rc.conf	/^tmap <C-u>       taskview_move up=0.5    pages=True$/;"	k
\x20      terminal	.config/ranger/rifle.conf	/^ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"$/;"	k
\x20     move to	.config/ranger/rc.conf	/^map <END>      move to=-1$/;"	k
\x20     pager_move  down	.config/ranger/rc.conf	/^pmap  <down>      pager_move  down=1$/;"	k
\x20     pager_move  left	.config/ranger/rc.conf	/^pmap  <left>      pager_move  left=4$/;"	k
\x20     pager_move  to	.config/ranger/rc.conf	/^pmap  <home>      pager_move  to=0$/;"	k
\x20     taskview_move down	.config/ranger/rc.conf	/^tmap <down>      taskview_move down=1$/;"	k
\x20     taskview_move to	.config/ranger/rc.conf	/^tmap <home>      taskview_move to=0$/;"	k
\x20    move down	.config/ranger/rc.conf	/^map <DOWN>     move down=1$/;"	k
\x20    move left	.config/ranger/rc.conf	/^map <LEFT>     move left=1$/;"	k
\x20    move to	.config/ranger/rc.conf	/^map <HOME>     move to=0$/;"	k
\x20    pager_move  right	.config/ranger/rc.conf	/^pmap  <right>     pager_move  right=4$/;"	k
\x20   has atool	.config/ranger/rifle.conf	/^ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | "/;"	k
\x20   move right	.config/ranger/rc.conf	/^map <RIGHT>    move right=1$/;"	k
\x20   pager_move  up	.config/ranger/rc.conf	/^pmap  <pageup>    pager_move  up=1.0    pages=True$/;"	k
\x20   taskview_move up	.config/ranger/rc.conf	/^tmap <pageup>    taskview_move up=1.0    pages=True$/;"	k
\x20  move up	.config/ranger/rc.conf	/^map <PAGEUP>   move up=1     pages=True$/;"	k
\x20 label editor	.config/ranger/rifle.conf	/^mime ^text,  label editor = ${VISUAL:-$EDITOR} -- "$@"$/;"	k
\x20 label pager	.config/ranger/rifle.conf	/^mime ^text,  label pager  = "$PAGER" -- "$@"$/;"	k
\x20 pager_move  down	.config/ranger/rc.conf	/^pmap  <pagedown>  pager_move  down=1.0  pages=True$/;"	k
\x20 taskview_move down	.config/ranger/rc.conf	/^tmap <pagedown>  taskview_move down=1.0  pages=True$/;"	k
\x20X	.config/ranger/rifle.conf	/^ext nes, has fceux, X         = fceux "$1"$/;"	k
\x20X	.config/ranger/rifle.conf	/^ext s[wmf]c, has zsnes, X     = zsnes "$1"$/;"	k
\x20X	.config/ranger/rifle.conf	/^label wallpaper, number 11, mime ^image, has feh, X = feh --bg-scale "$1"$/;"	k
\x20X	.config/ranger/rifle.conf	/^label wallpaper, number 12, mime ^image, has feh, X = feh --bg-tile "$1"$/;"	k
\x20X	.config/ranger/rifle.conf	/^label wallpaper, number 13, mime ^image, has feh, X = feh --bg-center "$1"$/;"	k
\x20X	.config/ranger/rifle.conf	/^label wallpaper, number 14, mime ^image, has feh, X = feh --bg-fill "$1"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has gnumeric,    X, flag f = gnumeric/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has kspread,     X, flag f = kspread /;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext cbr,  has zathura,      X, flag f = zathura -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext cbz,  has zathura,      X, flag f = zathura -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext djvu, has atril,  X, flag f = atril -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext djvu, has djview, X, flag f = djview -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext djvu, has evince, X, flag f = evince -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext djvu, has zathura,X, flag f = zathura -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext epub, has ebook-viewer, X, flag f = ebook-viewer -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext epub, has mupdf,        X, flag f = mupdf -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext epub, has zathura,      X, flag f = zathura -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext mobi, has ebook-viewer, X, flag f = ebook-viewer -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has apvlv,    X, flag f = apvlv -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has atril,    X, flag f = atril -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has epdfview, X, flag f = epdfview -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has evince,   X, flag f = evince -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has llpp,     X, flag f = llpp "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has mupdf,    X, flag f = mupdf "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has mupdf-x11,X, flag f = mupdf-x11 "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has okular,   X, flag f = okular -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has open,     X, flag f = open "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has qpdfview, X, flag f = qpdfview "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has xpdf,     X, flag f = xpdf -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pdf, has zathura,  X, flag f = zathura -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoff/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has ooffice,     X, flag f = ooffice /;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has soffice,     X, flag f = soffice /;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has chromium,         X, flag f = chromium -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has chromium-browser, X, flag f = chromium-browser -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has dwb,              X, flag f = dwb -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has epiphany,         X, flag f = epiphany -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has firefox,          X, flag f = firefox -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has google-chrome,    X, flag f = google-chrome -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has iceweasel,        X, flag f = iceweasel -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has jumanji,          X, flag f = jumanji -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has konqueror,        X, flag f = konqueror -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has luakit,           X, flag f = luakit -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has midori,           X, flag f = midori -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has opera,            X, flag f = opera -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has qutebrowser,      X, flag f = qutebrowser -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has seamonkey,        X, flag f = seamonkey -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has surf,             X, flag f = surf -- file:\/\/"$1"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has uzbl,             X, flag f = uzbl -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has uzbl-browser,     X, flag f = uzbl-browser -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has uzbl-core,        X, flag f = uzbl-core -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has uzbl-tabbed,      X, flag f = uzbl-tabbed -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has vimprobable,      X, flag f = vimprobable -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext x?html?, has vimprobable2,     X, flag f = vimprobable2 -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^ext xcf,                    X, flag f = gimp -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^font, has fontforge, X, flag f = fontforge "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has eog,       X, flag f = eog -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has eom,       X, flag f = eom -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has feh,       X, flag f = feh -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has geeqie,    X, flag f = geeqie -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has gimp,      X, flag f = gimp -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has gpicview,  X, flag f = gpicview -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has gwenview,  X, flag f = gwenview -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has imv,       X, flag f = imv -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has mirage,    X, flag f = mirage -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has nomacs,    X, flag f = nomacs -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has pqiv,      X, flag f = pqiv -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has ristretto, X, flag f = ristretto "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image, has sxiv,      X, flag f = sxiv -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image\/svg, has display,  X, flag f = display -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^image\/svg, has inkscape, X, flag f = inkscape -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video,       has mplayer,  X, flag f = mplayer -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video,       has mplayer,  X, flag f = mplayer -fs -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video,       has mplayer2, X, flag f = mplayer2 -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video,       has mplayer2, X, flag f = mplayer2 -fs -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video,       has mpv,      X, flag f = mpv -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video,       has mpv,      X, flag f = mpv --fs -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video|audio, has gmplayer, X, flag f = gmplayer -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video|audio, has smplayer, X, flag f = smplayer "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video|audio, has totem,    X, flag f = totem -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video|audio, has totem,    X, flag f = totem --fullscreen -- "$@"$/;"	k
\x20flag f	.config/ranger/rifle.conf	/^mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"$/;"	k
\x20has 7z	.config/ranger/rifle.conf	/^ext 7z, has 7z = 7z -p l "$@" | "$PAGER"$/;"	k
\x20has alacritty	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has alacritty = alacritty -e "$@"$/;"	k
\x20has atool	.config/ranger/rifle.conf	/^ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"$/;"	k
\x20has atool	.config/ranger/rifle.conf	/^ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"$/;"	k
\x20has atool	.config/ranger/rifle.conf	/^ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "/;"	k
\x20has bzip2	.config/ranger/rifle.conf	/^ext bz2, has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done$/;"	k
\x20has guake	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has guake = guake -ne "$@"$/;"	k
\x20has kitty	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has kitty = kitty -- "$@"$/;"	k
\x20has konsole	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has konsole = konsole -e "$@"$/;"	k
\x20has lilyterm	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has lilyterm = lilyterm -e "$@"$/;"	k
\x20has lxterminal	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has lxterminal = lxterminal -e "$@"$/;"	k
\x20has mplayer	.config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mplayer  = mplayer -- "$@"$/;"	k
\x20has mplayer	.config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mplayer   = mplayer -- "$@"$/;"	k
\x20has mplayer2	.config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mplayer2 = mplayer2 -- "$@"$/;"	k
\x20has mplayer2	.config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mplayer2  = mplayer2 -- "$@"$/;"	k
\x20has mpv	.config/ranger/rifle.conf	/^mime ^audio|ogg$, terminal, has mpv      = mpv -- "$@"$/;"	k
\x20has mpv	.config/ranger/rifle.conf	/^mime ^video, terminal, !X, has mpv       = mpv -- "$@"$/;"	k
\x20has open	.config/ranger/rifle.conf	/^label open, has open     = open -- "$@"$/;"	k
\x20has sakura	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has sakura = sakura -e "$@"$/;"	k
\x20has st	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has st = st -e "$@"$/;"	k
\x20has tar	.config/ranger/rifle.conf	/^ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done$/;"	k
\x20has tar	.config/ranger/rifle.conf	/^ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"$/;"	k
\x20has terminator	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has terminator = terminator -x "$@"$/;"	k
\x20has terminology	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has terminology = terminology -e "$@"$/;"	k
\x20has termite	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has termite = termite -x '"$@"'$/;"	k
\x20has tilda	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has tilda = tilda -c "$@"$/;"	k
\x20has unace	.config/ranger/rifle.conf	/^ext ace, has unace = for file in "$@"; do unace e "$file"; done$/;"	k
\x20has unace	.config/ranger/rifle.conf	/^ext ace, has unace = unace l "$1" | "$PAGER"$/;"	k
\x20has unrar	.config/ranger/rifle.conf	/^ext rar, has unrar = for file in "$@"; do unrar x "$file"; done$/;"	k
\x20has unrar	.config/ranger/rifle.conf	/^ext rar, has unrar = unrar l "$1" | "$PAGER"$/;"	k
\x20has unzip	.config/ranger/rifle.conf	/^ext zip, has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done$/;"	k
\x20has unzip	.config/ranger/rifle.conf	/^ext zip, has unzip = unzip -l "$1" | "$PAGER"$/;"	k
\x20has urxvt	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has urxvt = urxvt -e "$@"$/;"	k
\x20has wildmidi	.config/ranger/rifle.conf	/^ext midi?,        terminal, has wildmidi = wildmidi -- "$@"$/;"	k
\x20has xterm	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has xterm = xterm -e "$@"$/;"	k
\x20mark_files toggle	.config/ranger/rc.conf	/^map <Space> mark_files toggle=True$/;"	k
\x20move down	.config/ranger/rc.conf	/^map <PAGEDOWN> move down=1   pages=True$/;"	k
\x20tag_toggle tag	.config/ranger/rc.conf	/^map "<any>  tag_toggle tag=%any$/;"	k
__init__	.config/ranger/commands_full.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:jump_non
__init__	.config/ranger/commands_full.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:rename_append
__init__	.config/ranger/commands_full.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:scout
_build_regex	.config/ranger/commands_full.py	/^    def _build_regex(self):$/;"	m	class:scout
_command_name	.config/ranger/commands_full.py	/^    _command_name = "meta"$/;"	v	class:prompt_metadata
_console_chain	.config/ranger/commands_full.py	/^    _console_chain = None$/;"	v	class:prompt_metadata
_count	.config/ranger/commands_full.py	/^    def _count(self, move=False, offset=0):$/;"	m	class:scout
_exit_no_work	.config/ranger/commands_full.py	/^    def _exit_no_work(self):$/;"	m	class:quit
_exit_no_work	.config/ranger/commands_full.py	/^    def _exit_no_work(self):$/;"	m	class:quitall
_fill_console	.config/ranger/commands_full.py	/^    def _fill_console(self, key):$/;"	m	class:prompt_metadata
_get_app_flags_mode	.config/ranger/commands_full.py	/^    def _get_app_flags_mode(self, string):  # pylint: disable=too-many-branches,too-many-stateme/;"	m	class:open_with
_is_app	.config/ranger/commands_full.py	/^    def _is_app(self, arg):$/;"	m	class:open_with
_is_flags	.config/ranger/commands_full.py	/^    def _is_flags(arg):$/;"	m	class:open_with
_is_mode	.config/ranger/commands_full.py	/^    def _is_mode(arg):$/;"	m	class:open_with
_non	.config/ranger/commands_full.py	/^    def _non(fobj, is_directory):$/;"	m	class:jump_non
_process_command_stack	.config/ranger/commands_full.py	/^    def _process_command_stack(self):$/;"	m	class:prompt_metadata
_question_callback	.config/ranger/commands_full.py	/^    def _question_callback(self, files, answer):$/;"	m	class:delete
_question_callback	.config/ranger/commands_full.py	/^    def _question_callback(self, files, answer):$/;"	m	class:trash
_re_shift	.config/ranger/commands_full.py	/^    def _re_shift(self, match):$/;"	m	class:setlocal
_tab_args	.config/ranger/commands_full.py	/^    def _tab_args(self):$/;"	m	class:cd
_tab_fuzzy	.config/ranger/commands_full.py	/^    def _tab_fuzzy(self, dest, dest_abs):$/;"	m	class:cd
_tab_fuzzy_match	.config/ranger/commands_full.py	/^    def _tab_fuzzy_match(self, basepath, tokens):$/;"	m	class:cd
_tab_match	.config/ranger/commands_full.py	/^    def _tab_match(self, path_user, path_file):$/;"	m	class:cd
_tab_normal	.config/ranger/commands_full.py	/^    def _tab_normal(self, dest, dest_abs):$/;"	m	class:cd
_tab_paths	.config/ranger/commands_full.py	/^    def _tab_paths(dest, dest_abs, ends_with_sep):$/;"	m	class:cd
alias	.config/ranger/commands_full.py	/^class alias(Command):$/;"	c
allow_abbrev	.config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:delete
allow_abbrev	.config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:quit_bang
allow_abbrev	.config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:quitall_bang
allow_abbrev	.config/ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:trash
backend	.config/picom/picom.conf	/^backend = "glx";$/;"	k
backends	.config/picom/picom.conf	/^experimental-backends = true;$/;"	k
backward	.config/ranger/rc.conf	/^cmap <A-d>        eval fm.ui.console.delete_word(backward=False)$/;"	k
blur	.config/picom/picom.conf	/^blur: {$/;"	k
bulkrename	.config/ranger/commands_full.py	/^class bulkrename(Command):$/;"	c
callback	.config/ranger/commands_full.py	/^        def callback(answer):$/;"	f	member:help_.execute	file:
cancel	.config/ranger/commands_full.py	/^    def cancel(self):$/;"	m	class:scout
cd	.config/ranger/commands_full.py	/^class cd(Command):$/;"	c
chain	.config/ranger/commands_full.py	/^class chain(Command):$/;"	c
chmod	.config/ranger/commands_full.py	/^class chmod(Command):$/;"	c
clipboards	.config/ranger/commands_full.py	/^        def clipboards():$/;"	f	member:yank.execute	file:
cmap	.config/ranger/commands_full.py	/^class cmap(map_):$/;"	c
coc.source.emoji.filetypes	.config/nvim/coc-settings.json	/^	"coc.source.emoji.filetypes": ["markdown", "html", "lisp"],$/;"	a
console	.config/ranger/commands_full.py	/^class console(Command):$/;"	c
context	.config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:alias
context	.config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:copymap
context	.config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:map_
context	.config/ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:unmap
context	.config/ranger/commands_full.py	/^    context = 'console'$/;"	v	class:cmap
context	.config/ranger/commands_full.py	/^    context = 'console'$/;"	v	class:copycmap
context	.config/ranger/commands_full.py	/^    context = 'console'$/;"	v	class:uncmap
context	.config/ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:copypmap
context	.config/ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:pmap
context	.config/ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:unpmap
context	.config/ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:copytmap
context	.config/ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:tmap
context	.config/ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:untmap
copy_buffer_filename	.config/ranger/commands_full.py	/^    copy_buffer_filename = 'copy_buffer'$/;"	v	class:load_copy_buffer
copy_buffer_filename	.config/ranger/commands_full.py	/^    copy_buffer_filename = 'copy_buffer'$/;"	v	class:save_copy_buffer
copycmap	.config/ranger/commands_full.py	/^class copycmap(copymap):$/;"	c
copymap	.config/ranger/commands_full.py	/^class copymap(Command):$/;"	c
copypmap	.config/ranger/commands_full.py	/^class copypmap(copymap):$/;"	c
copytmap	.config/ranger/commands_full.py	/^class copytmap(copymap):$/;"	c
corners	.config/picom/picom.conf	/^detect-rounded-corners = false;$/;"	k
cunmap	.config/ranger/commands_full.py	/^class cunmap(uncmap):$/;"	c
daemon	.config/picom/picom.conf	/^daemon = true$/;"	k
damage	.config/picom/picom.conf	/^use-damage = false$/;"	k
default_linemode	.config/ranger/commands_full.py	/^class default_linemode(Command):$/;"	c
default_value_completer	.config/ranger/commands_full.py	/^            def default_value_completer():$/;"	f	member:set_.tab	file:
delete	.config/ranger/commands_full.py	/^class delete(Command):$/;"	c
diagnostics_indicator	.config/nvim/lua/plugin-config/bufferline.lua	/^		diagnostics_indicator = function(count, level, diagnostics_dict, context)$/;"	f
dirarg	.config/ranger/rc.conf	/^map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)$/;"	k
dirarg	.config/ranger/rc.conf	/^map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)$/;"	k
do_mark	.config/ranger/commands_full.py	/^    do_mark = False$/;"	v	class:unmark_tag
do_mark	.config/ranger/commands_full.py	/^    do_mark = True$/;"	v	class:mark_tag
dotfiles	README.md	/^# dotfiles$/;"	c
dropdown_menu	.config/picom/picom.conf	/^dropdown_menu = { opacity = 0.9; }$/;"	k
echo	.config/ranger/commands_full.py	/^class echo(Command):$/;"	c
edit	.config/ranger/commands_full.py	/^class edit(Command):$/;"	c
esc	.config/ranger/commands_full.py	/^        from ranger.ext.shell_escape import shell_escape as esc$/;"	x	member:bulkrename.execute	file:	nameref:unknown:shell_escape
escape_macros_for_shell	.config/ranger/commands_full.py	/^    escape_macros_for_shell = True$/;"	v	class:delete
escape_macros_for_shell	.config/ranger/commands_full.py	/^    escape_macros_for_shell = True$/;"	v	class:shell
escape_macros_for_shell	.config/ranger/commands_full.py	/^    escape_macros_for_shell = True$/;"	v	class:trash
eval_	.config/ranger/commands_full.py	/^class eval_(Command):$/;"	c
exclude	.config/picom/picom.conf	/^blur-background-exclude = [$/;"	k
exclude	.config/picom/picom.conf	/^fade-exclude = [$/;"	k
exclude	.config/picom/picom.conf	/^focus-exclude = [$/;"	k
exclude	.config/picom/picom.conf	/^shadow-exclude = [$/;"	k
executable	.config/ranger/rifle.conf	/^mime application\/x-executable = "$1"$/;"	k
execute	.config/ranger/commands.py	/^    def execute(self):$/;"	m	class:my_edit
execute	.config/ranger/commands_full.py	/^    def execute(self):  # pylint: disable=too-many-branches$/;"	m	class:scout
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:alias
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:bulkrename
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:cd
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:chain
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:chmod
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:console
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:copymap
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:cunmap
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:default_linemode
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:delete
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:echo
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:edit
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:eval_
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:filter_inode_type
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:filter_stack
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:flat
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:grep
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:help_
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:jump_non
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:linemode
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:load_copy_buffer
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:map_
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:mark_tag
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:meta
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:mkdir
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:narrow
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:open_with
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:paste_ext
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:prompt_metadata
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:punmap
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quit
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quit_bang
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quitall
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quitall_bang
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:relink
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:rename
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:rename_append
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:reset_previews
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:save_copy_buffer
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:set_
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:setintag
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:setlocal
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:shell
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:stage
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:terminal
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:touch
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:trash
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:tunmap
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:unmap
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:unstage
execute	.config/ranger/commands_full.py	/^    def execute(self):$/;"	m	class:yank
ext 1	.config/ranger/rifle.conf	/^ext 1                         = man "$1"$/;"	k
ext exe	.config/ranger/rifle.conf	/^ext exe                       = wine "$1"$/;"	k
ext js	.config/ranger/rifle.conf	/^ext js  = node -- "$1"$/;"	k
ext php	.config/ranger/rifle.conf	/^ext php = php -- "$1"$/;"	k
ext pl	.config/ranger/rifle.conf	/^ext pl  = perl -- "$1"$/;"	k
ext py	.config/ranger/rifle.conf	/^ext py  = python3 -- "$1"$/;"	k
ext rb	.config/ranger/rifle.conf	/^ext rb  = ruby -- "$1"$/;"	k
ext sh	.config/ranger/rifle.conf	/^ext sh  = sh -- "$1"$/;"	k
fading	.config/picom/picom.conf	/^fading = true;$/;"	k
filter_inode_type	.config/ranger/commands_full.py	/^class filter_inode_type(Command):$/;"	c
filter_stack	.config/ranger/commands_full.py	/^class filter_stack(Command):$/;"	c
flat	.config/ranger/commands_full.py	/^class flat(Command):$/;"	c
focused	.config/picom/picom.conf	/^mark-ovredir-focused = true;$/;"	k
focused	.config/picom/picom.conf	/^mark-wmwin-focused = true;$/;"	k
get_selection_attr	.config/ranger/commands_full.py	/^    def get_selection_attr(self, attr):$/;"	m	class:yank
grep	.config/ranger/commands_full.py	/^class grep(Command):$/;"	c
gruv-material-med	.config/alacritty/alacritty.yml	/^  gruv-material-med: &gruv-material-med$/;"	a
gruv-med	.config/alacritty/alacritty.yml	/^  gruv-med: &gruv-med$/;"	a
h	.config/picom/picom.conf	/^transition-pow-h = 0.1$/;"	k
handle_extension	.config/ranger/scope.sh	/^handle_extension() {$/;"	f
handle_fallback	.config/ranger/scope.sh	/^handle_fallback() {$/;"	f
handle_image	.config/ranger/scope.sh	/^handle_image() {$/;"	f
handle_mime	.config/ranger/scope.sh	/^handle_mime() {$/;"	f
help_	.config/ranger/commands_full.py	/^class help_(Command):$/;"	c
html.format.indentInnerHtml	.config/nvim/coc-settings.json	/^	"html.format.indentInnerHtml": true,$/;"	b
is_directory_with_files	.config/ranger/commands_full.py	/^        def is_directory_with_files(path):$/;"	f	member:delete.execute	file:
is_directory_with_files	.config/ranger/commands_full.py	/^        def is_directory_with_files(path):$/;"	f	member:trash.execute	file:
jump_non	.config/ranger/commands_full.py	/^class jump_non(Command):$/;"	c
label trash	.config/ranger/rifle.conf	/^label trash = mkdir -p -- ${XDG_DATA_DIR:-$HOME\/.ranger}\/ranger-trash; mv -- "$@" ${XDG_DATA_D/;"	k
leader	.config/picom/picom.conf	/^detect-client-leader = true$/;"	k
left	.config/ranger/rc.conf	/^cmap <a-b> eval fm.ui.console.move_word(left=1)$/;"	k
left	.config/ranger/rc.conf	/^cmap <left>  eval fm.ui.console.move(left=1)$/;"	k
length	.config/picom/picom.conf	/^transition-length = 300$/;"	k
level	.config/picom/picom.conf	/^log-level = "info";$/;"	k
linemode	.config/ranger/commands_full.py	/^class linemode(default_linemode):$/;"	c
load_copy_buffer	.config/ranger/commands_full.py	/^class load_copy_buffer(Command):$/;"	c
make_safe_path	.config/ranger/commands_full.py	/^    def make_safe_path(dst):$/;"	m	class:paste_ext
map	.config/ranger/rc.conf	/^map :  console$/;"	k
map	.config/ranger/rc.conf	/^map =  chmod$/;"	k
map J  move down	.config/ranger/rc.conf	/^map J  move down=0.5  pages=True$/;"	k
map K  move up	.config/ranger/rc.conf	/^map K  move up=0.5    pages=True$/;"	k
map N  search_next forward	.config/ranger/rc.conf	/^map N  search_next forward=False$/;"	k
map ca search_next order	.config/ranger/rc.conf	/^map ca search_next order=atime$/;"	k
map cc search_next order	.config/ranger/rc.conf	/^map cc search_next order=ctime$/;"	k
map ci search_next order	.config/ranger/rc.conf	/^map ci search_next order=mimetype$/;"	k
map cm search_next order	.config/ranger/rc.conf	/^map cm search_next order=mtime$/;"	k
map cs search_next order	.config/ranger/rc.conf	/^map cs search_next order=size$/;"	k
map ct search_next order	.config/ranger/rc.conf	/^map ct search_next order=tag$/;"	k
map da cut mode	.config/ranger/rc.conf	/^map da cut mode=add$/;"	k
map dr cut mode	.config/ranger/rc.conf	/^map dr cut mode=remove$/;"	k
map dt cut mode	.config/ranger/rc.conf	/^map dt cut mode=toggle$/;"	k
map oA chain set sort	.config/ranger/rc.conf	/^map oA chain set sort=atime;     set sort_reverse=True$/;"	k
map oB chain set sort	.config/ranger/rc.conf	/^map oB chain set sort=basename;  set sort_reverse=True$/;"	k
map oC chain set sort	.config/ranger/rc.conf	/^map oC chain set sort=ctime;     set sort_reverse=True$/;"	k
map oE chain set sort	.config/ranger/rc.conf	/^map oE chain set sort=extension; set sort_reverse=True$/;"	k
map oM chain set sort	.config/ranger/rc.conf	/^map oM chain set sort=mtime;     set sort_reverse=True$/;"	k
map oN chain set sort	.config/ranger/rc.conf	/^map oN chain set sort=natural;   set sort_reverse=True$/;"	k
map oS chain set sort	.config/ranger/rc.conf	/^map oS chain set sort=size;      set sort_reverse=True$/;"	k
map oT chain set sort	.config/ranger/rc.conf	/^map oT chain set sort=type;      set sort_reverse=True$/;"	k
map oa chain set sort	.config/ranger/rc.conf	/^map oa chain set sort=atime;     set sort_reverse=False$/;"	k
map ob chain set sort	.config/ranger/rc.conf	/^map ob chain set sort=basename;  set sort_reverse=False$/;"	k
map oc chain set sort	.config/ranger/rc.conf	/^map oc chain set sort=ctime;     set sort_reverse=False$/;"	k
map oe chain set sort	.config/ranger/rc.conf	/^map oe chain set sort=extension; set sort_reverse=False$/;"	k
map om chain set sort	.config/ranger/rc.conf	/^map om chain set sort=mtime;     set sort_reverse=False$/;"	k
map on chain set sort	.config/ranger/rc.conf	/^map on chain set sort=natural;   set sort_reverse=False$/;"	k
map os chain set sort	.config/ranger/rc.conf	/^map os chain set sort=size;      set sort_reverse=False$/;"	k
map ot chain set sort	.config/ranger/rc.conf	/^map ot chain set sort=type;      set sort_reverse=False$/;"	k
map oz set sort	.config/ranger/rc.conf	/^map oz set sort=random$/;"	k
map pL paste_symlink relative	.config/ranger/rc.conf	/^map pL paste_symlink relative=True$/;"	k
map pO paste overwrite	.config/ranger/rc.conf	/^map pO paste overwrite=True append=True$/;"	k
map pP paste append	.config/ranger/rc.conf	/^map pP paste append=True$/;"	k
map pd console paste dest	.config/ranger/rc.conf	/^map pd console paste dest=$/;"	k
map pl paste_symlink relative	.config/ranger/rc.conf	/^map pl paste_symlink relative=False$/;"	k
map po paste overwrite	.config/ranger/rc.conf	/^map po paste overwrite=True$/;"	k
map uV      toggle_visual_mode reverse	.config/ranger/rc.conf	/^map uV      toggle_visual_mode reverse=True$/;"	k
map uv      mark_files all	.config/ranger/rc.conf	/^map uv      mark_files all=True val=False$/;"	k
map v       mark_files all	.config/ranger/rc.conf	/^map v       mark_files all=True toggle=True$/;"	k
map ya copy mode	.config/ranger/rc.conf	/^map ya copy mode=add$/;"	k
map yr copy mode	.config/ranger/rc.conf	/^map yr copy mode=remove$/;"	k
map yt copy mode	.config/ranger/rc.conf	/^map yt copy mode=toggle$/;"	k
map_	.config/ranger/commands_full.py	/^class map_(Command):$/;"	c
mark_tag	.config/ranger/commands_full.py	/^class mark_tag(Command):$/;"	c
meta	.config/ranger/commands_full.py	/^class meta(prompt_metadata):$/;"	c
mkdir	.config/ranger/commands_full.py	/^class mkdir(Command):$/;"	c
modes	.config/ranger/commands_full.py	/^    modes = {$/;"	v	class:yank
my_edit	.config/ranger/commands.py	/^class my_edit(Command):$/;"	c
name	.config/ranger/commands_full.py	/^    name = 'eval'$/;"	v	class:eval_
name	.config/ranger/commands_full.py	/^    name = 'help'$/;"	v	class:help_
name	.config/ranger/commands_full.py	/^    name = 'map'$/;"	v	class:map_
name	.config/ranger/commands_full.py	/^    name = 'quit!'$/;"	v	class:quit_bang
name	.config/ranger/commands_full.py	/^    name = 'quitall!'$/;"	v	class:quitall_bang
name	.config/ranger/commands_full.py	/^    name = 'set'  # don't override the builtin set class$/;"	v	class:set_
narrow	.config/ranger/commands_full.py	/^class narrow(Command):$/;"	c
nord	.config/alacritty/alacritty.yml	/^  nord: &nord$/;"	a
opacity	.config/picom/picom.conf	/^active-opacity = 0.85;$/;"	k
opacity	.config/picom/picom.conf	/^detect-client-opacity = true;$/;"	k
opacity	.config/picom/picom.conf	/^frame-opacity = 1.0;$/;"	k
opacity	.config/picom/picom.conf	/^inactive-opacity = 0.75;$/;"	k
open	.config/ranger/rifle.conf	/^label open, has xdg-open = xdg-open -- "$@"$/;"	k
open_with	.config/ranger/commands_full.py	/^class open_with(Command):$/;"	c
override	.config/picom/picom.conf	/^inactive-opacity-override = false;$/;"	k
pairs.enableCharacters	.config/nvim/coc-settings.json	/^	"pairs.enableCharacters": [$/;"	a
paste dest	.config/ranger/rc.conf	/^map p'<any> paste dest=%any_path$/;"	k
paste dest	.config/ranger/rc.conf	/^map p`<any> paste dest=%any_path$/;"	k
paste_ext	.config/ranger/commands_full.py	/^class paste_ext(Command):$/;"	c
php	.config/ranger/rifle.conf	/^!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} -- "$@"$/;"	k
php	.config/ranger/rifle.conf	/^!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"$/;"	k
php	.config/ranger/rifle.conf	/^label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = ${VISUAL:-$EDITOR} -- "$@/;"	k
php	.config/ranger/rifle.conf	/^label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = "$PAGER" -- "$@"$/;"	k
pmap	.config/ranger/commands_full.py	/^class pmap(map_):$/;"	c
popup_menu	.config/picom/picom.conf	/^popup_menu = { opacity = 0.9; }$/;"	k
position	.config/ranger/rc.conf	/^map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7/;"	k
prompt_metadata	.config/ranger/commands_full.py	/^class prompt_metadata(Command):$/;"	c
punmap	.config/ranger/commands_full.py	/^class punmap(unpmap):$/;"	c
put	.config/ranger/rifle.conf	/^label trash, has trash-put = trash-put -- "$@"$/;"	k
python.linting.pylintEnabled	.config/nvim/coc-settings.json	/^	"python.linting.pylintEnabled": true$/;"	b
quick	.config/ranger/commands_full.py	/^    def quick(self):$/;"	m	class:scout
quit	.config/ranger/commands_full.py	/^class quit(Command):  # pylint: disable=redefined-builtin$/;"	c
quit_bang	.config/ranger/commands_full.py	/^class quit_bang(Command):$/;"	c
quitall	.config/ranger/commands_full.py	/^class quitall(Command):$/;"	c
quitall_bang	.config/ranger/commands_full.py	/^class quitall_bang(Command):$/;"	c
radius	.config/picom/picom.conf	/^shadow-radius = 14;$/;"	k
rate	.config/picom/picom.conf	/^refresh-rate = 0$/;"	k
relink	.config/ranger/commands_full.py	/^class relink(Command):$/;"	c
rename	.config/ranger/commands_full.py	/^class rename(Command):$/;"	c
rename_append	.config/ranger/commands_full.py	/^class rename_append(Command):$/;"	c
reset_previews	.config/ranger/commands_full.py	/^class reset_previews(Command):$/;"	c
resolve_macros	.config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:alias
resolve_macros	.config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:chain
resolve_macros	.config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:eval_
resolve_macros	.config/ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:map_
right	.config/nvim/lua/plugin-config/bufferline.lua	/^			right = function()$/;"	f
right	.config/ranger/rc.conf	/^cmap <a-f> eval fm.ui.console.move_word(right=1)$/;"	k
right	.config/ranger/rc.conf	/^cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)$/;"	k
right	.config/ranger/rc.conf	/^cmap <home>  eval fm.ui.console.move(right=0, absolute=True)$/;"	k
right	.config/ranger/rc.conf	/^cmap <right> eval fm.ui.console.move(right=1)$/;"	k
rule	.config/picom/picom.conf	/^opacity-rule = [$/;"	k
save_copy_buffer	.config/ranger/commands_full.py	/^class save_copy_buffer(Command):$/;"	c
scout	.config/ranger/commands_full.py	/^class scout(Command):$/;"	c
set_	.config/ranger/commands_full.py	/^class set_(Command):$/;"	c
setintag	.config/ranger/commands_full.py	/^class setintag(set_):$/;"	c
setlocal	.config/ranger/commands_full.py	/^class setlocal(set_):$/;"	c
shadow	.config/picom/picom.conf	/^no-dnd-shadow = true$/;"	k
shadow	.config/picom/picom.conf	/^no-dock-shadow = true$/;"	k
shadow	.config/picom/picom.conf	/^shadow = true;$/;"	k
shell	.config/ranger/commands_full.py	/^class shell(Command):$/;"	c
stage	.config/ranger/commands_full.py	/^class stage(Command):$/;"	c
step	.config/picom/picom.conf	/^fade-in-step = 0.02;$/;"	k
step	.config/picom/picom.conf	/^fade-out-step = 0.02;$/;"	k
tab	.config/ranger/commands.py	/^    def tab(self, tabnum):$/;"	m	class:my_edit
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):  # pylint: disable=too-many-return-statements$/;"	m	class:set_
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:cd
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:default_linemode
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:delete
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:edit
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:meta
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:mkdir
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:open_with
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:relink
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:rename
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:scout
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:shell
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:touch
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:trash
tab	.config/ranger/commands_full.py	/^    def tab(self, tabnum):$/;"	m	class:yank
terminal	.config/ranger/commands_full.py	/^class terminal(Command):$/;"	c
terminal	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has gnome-terminal = gnome-terminal -- "$@"$/;"	k
terminal	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has mate-terminal = mate-terminal -x "$@"$/;"	k
terminal	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has pantheon-terminal = pantheon-terminal -e "$@"$/;"	k
terminal	.config/ranger/rifle.conf	/^mime ^ranger\/x-terminal-emulator, has xfce4-terminal = xfce4-terminal -x "$@"$/;"	k
tmap	.config/ranger/commands_full.py	/^class tmap(map_):$/;"	c
touch	.config/ranger/commands_full.py	/^class touch(Command):$/;"	c
toykonight-storm	.config/alacritty/alacritty.yml	/^  tokyonight-storm: &toykonight-storm$/;"	a
transient	.config/picom/picom.conf	/^detect-transient = true$/;"	k
transition	.config/picom/picom.conf	/^size-transition = true$/;"	k
trash	.config/ranger/commands_full.py	/^class trash(Command):$/;"	c
tunmap	.config/ranger/commands_full.py	/^class tunmap(untmap):$/;"	c
uncmap	.config/ranger/commands_full.py	/^class uncmap(unmap):$/;"	c
unmap	.config/ranger/commands_full.py	/^class unmap(Command):$/;"	c
unmark_tag	.config/ranger/commands_full.py	/^class unmark_tag(mark_tag):$/;"	c
unpmap	.config/ranger/commands_full.py	/^class unpmap(unmap):$/;"	c
unstage	.config/ranger/commands_full.py	/^class unstage(Command):$/;"	c
untmap	.config/ranger/commands_full.py	/^class untmap(unmap):$/;"	c
vsync	.config/picom/picom.conf	/^vsync = true$/;"	k
w	.config/picom/picom.conf	/^transition-pow-w = 0.1$/;"	k
wintypes	.config/picom/picom.conf	/^wintypes:$/;"	k
x	.config/picom/picom.conf	/^shadow-offset-x = -7;$/;"	k
x	.config/picom/picom.conf	/^transition-pow-x = 0.1$/;"	k
y	.config/picom/picom.conf	/^shadow-offset-y = -7;$/;"	k
y	.config/picom/picom.conf	/^transition-pow-y = 0.1$/;"	k
yank	.config/ranger/commands_full.py	/^class yank(Command):$/;"	c
